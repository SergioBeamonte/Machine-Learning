Tester:     weka.experiment.PairedCorrectedTTester -G 4,5,6 -D 1 -R 2 -S 0.05 -result-matrix "weka.experiment.ResultMatrixPlainText -mean-prec 2 -stddev-prec 2 -col-name-width 0 -row-name-width 25 -mean-width 0 -stddev-width 0 -sig-width 0 -count-width 5 -print-col-names -print-row-names -enum-col-names"
Analysing:  Percent_correct
Datasets:   1
Resultsets: 16
Confidence: 0.05 (two tailed)
Sorted by:  -
Date:       25/10/25 12:11


Dataset                   (1) lazy.IBk | (2) lazy. (3) lazy. (4) rules (5) rules (6) rules (7) rules (8) funct (9) funct (10) func (11) func (12) tree (13) tree (14) tree (15) tree (16) tree
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
full_main_financial_metri(100)   28.51 |   13.52 *   31.75 v   31.29     32.50 v   29.40     27.56     31.16     33.44 v   33.72 v   32.66 v   29.27     27.84     34.58 v   31.37     33.24 v
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                               (v/ /*) |   (0/0/1)   (1/0/0)   (0/1/0)   (1/0/0)   (0/1/0)   (0/1/0)   (0/1/0)   (1/0/0)   (1/0/0)   (1/0/0)   (0/1/0)   (0/1/0)   (1/0/0)   (0/1/0)   (1/0/0)


Key:
(1) lazy.IBk '-K 1 -W 0 -A \"weka.core.neighboursearch.LinearNNSearch -A \\\"weka.core.EuclideanDistance -R first-last\\\"\"' -3080186098777067172
(2) lazy.KStar '-B 20 -M a' 332458330800479083
(3) lazy.LWL '-U 0 -K -1 -A \"weka.core.neighboursearch.LinearNNSearch -A \\\"weka.core.EuclideanDistance -R first-last\\\"\" -W trees.DecisionStump' 1979797405383665815
(4) rules.JRip '-F 3 -N 2.0 -O 2 -S 1' -6589312996832147161
(5) rules.DecisionTable '-X 1 -S \"BestFirst -D 1 -N 5\"' 2888557078165701326
(6) rules.PART '-C 0.25 -M 2' 8121455039782598361
(7) rules.OneR '-B 6' -3459427003147861443
(8) functions.MultilayerPerceptron '-L 0.3 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H a' -5990607817048210779
(9) functions.SimpleLogistic '-I 0 -M 500 -H 50 -W 0.0' 7397710626304705059
(10) functions.Logistic '-R 1.0E-8 -M -1 -num-decimal-places 4' 3932117032546553727
(11) functions.SMO '-C 1.0 -L 0.001 -P 1.0E-12 -N 0 -V -1 -W 1 -K \"functions.supportVector.PolyKernel -E 1.0 -C 250007\" -calibrator \"functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4\"' -6585883636378691736
(12) trees.J48 '-C 0.25 -M 2' -217733168393644444
(13) trees.RandomTree '-K 0 -M 1.0 -V 0.001 -S 1' -9051119597407396024
(14) trees.RandomForest '-P 100 -I 100 -num-slots 1 -K 0 -M 1.0 -V 0.001 -S 1' 1116839470751428698
(15) trees.REPTree '-M 2 -V 0.001 -N 3 -S 1 -L -1 -I 0.0' -9216785998198681299
(16) trees.LMT '-I -1 -M 15 -W 0.0' -1113212459618104943

